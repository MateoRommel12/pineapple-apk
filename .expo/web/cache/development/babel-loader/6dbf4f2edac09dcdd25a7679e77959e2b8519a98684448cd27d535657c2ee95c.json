{"ast":null,"code":"import { isIOS } from '../../lib/common';\nimport { createModuleNamespace, FirebaseModule } from '../../lib/internal';\nimport UtilsStatics from './UtilsStatics';\nconst namespace = 'utils';\nconst statics = UtilsStatics;\nconst nativeModuleName = 'RNFBUtilsModule';\nclass FirebaseUtilsModule extends FirebaseModule {\n  get isRunningInTestLab() {\n    if (isIOS) {\n      return false;\n    }\n    return this.native.isRunningInTestLab;\n  }\n  get playServicesAvailability() {\n    if (isIOS) {\n      return {\n        isAvailable: true,\n        status: 0\n      };\n    }\n    return this.native.androidPlayServices;\n  }\n  getPlayServicesStatus() {\n    if (isIOS) {\n      return Promise.resolve({\n        isAvailable: true,\n        status: 0\n      });\n    }\n    return this.native.androidGetPlayServicesStatus();\n  }\n  promptForPlayServices() {\n    if (isIOS) {\n      return Promise.resolve();\n    }\n    return this.native.androidPromptForPlayServices();\n  }\n  makePlayServicesAvailable() {\n    if (isIOS) {\n      return Promise.resolve();\n    }\n    return this.native.androidMakePlayServicesAvailable();\n  }\n  resolutionForPlayServices() {\n    if (isIOS) {\n      return Promise.resolve();\n    }\n    return this.native.androidResolutionForPlayServices();\n  }\n  logInfo(...args) {\n    return logger.logInfo(...args);\n  }\n}\nexport default createModuleNamespace({\n  statics,\n  version: UtilsStatics.SDK_VERSION,\n  namespace,\n  nativeModuleName,\n  nativeEvents: false,\n  hasMultiAppSupport: false,\n  hasCustomUrlOrRegionSupport: false,\n  ModuleClass: FirebaseUtilsModule\n});","map":{"version":3,"names":["isIOS","createModuleNamespace","FirebaseModule","UtilsStatics","namespace","statics","nativeModuleName","FirebaseUtilsModule","isRunningInTestLab","native","playServicesAvailability","isAvailable","status","androidPlayServices","getPlayServicesStatus","Promise","resolve","androidGetPlayServicesStatus","promptForPlayServices","androidPromptForPlayServices","makePlayServicesAvailable","androidMakePlayServicesAvailable","resolutionForPlayServices","androidResolutionForPlayServices","logInfo","args","logger","version","SDK_VERSION","nativeEvents","hasMultiAppSupport","hasCustomUrlOrRegionSupport","ModuleClass"],"sources":["C:/Users/ACER/Documents/Capstone/node_modules/@react-native-firebase/app/lib/utils/index.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isIOS } from '../../lib/common';\nimport { createModuleNamespace, FirebaseModule } from '../../lib/internal';\nimport UtilsStatics from './UtilsStatics';\n\nconst namespace = 'utils';\nconst statics = UtilsStatics;\nconst nativeModuleName = 'RNFBUtilsModule';\n\nclass FirebaseUtilsModule extends FirebaseModule {\n  get isRunningInTestLab() {\n    if (isIOS) {\n      return false;\n    }\n    return this.native.isRunningInTestLab;\n  }\n\n  get playServicesAvailability() {\n    if (isIOS) {\n      return {\n        isAvailable: true,\n        status: 0,\n      };\n    }\n    return this.native.androidPlayServices;\n  }\n\n  getPlayServicesStatus() {\n    if (isIOS) {\n      return Promise.resolve({\n        isAvailable: true,\n        status: 0,\n      });\n    }\n    return this.native.androidGetPlayServicesStatus();\n  }\n\n  promptForPlayServices() {\n    if (isIOS) {\n      return Promise.resolve();\n    }\n    return this.native.androidPromptForPlayServices();\n  }\n\n  makePlayServicesAvailable() {\n    if (isIOS) {\n      return Promise.resolve();\n    }\n    return this.native.androidMakePlayServicesAvailable();\n  }\n\n  resolutionForPlayServices() {\n    if (isIOS) {\n      return Promise.resolve();\n    }\n    return this.native.androidResolutionForPlayServices();\n  }\n\n  logInfo(...args) {\n    return logger.logInfo(...args);\n  }\n}\n\n// import { utils } from '@react-native-firebase/app';\n// utils().X(...);\nexport default createModuleNamespace({\n  statics,\n  version: UtilsStatics.SDK_VERSION,\n  namespace,\n  nativeModuleName,\n  nativeEvents: false,\n  hasMultiAppSupport: false,\n  hasCustomUrlOrRegionSupport: false,\n  ModuleClass: FirebaseUtilsModule,\n});\n"],"mappings":"AAiBA,SAASA,KAAK,QAAQ,kBAAkB;AACxC,SAASC,qBAAqB,EAAEC,cAAc,QAAQ,oBAAoB;AAC1E,OAAOC,YAAY,MAAM,gBAAgB;AAEzC,MAAMC,SAAS,GAAG,OAAO;AACzB,MAAMC,OAAO,GAAGF,YAAY;AAC5B,MAAMG,gBAAgB,GAAG,iBAAiB;AAE1C,MAAMC,mBAAmB,SAASL,cAAc,CAAC;EAC/C,IAAIM,kBAAkBA,CAAA,EAAG;IACvB,IAAIR,KAAK,EAAE;MACT,OAAO,KAAK;IACd;IACA,OAAO,IAAI,CAACS,MAAM,CAACD,kBAAkB;EACvC;EAEA,IAAIE,wBAAwBA,CAAA,EAAG;IAC7B,IAAIV,KAAK,EAAE;MACT,OAAO;QACLW,WAAW,EAAE,IAAI;QACjBC,MAAM,EAAE;MACV,CAAC;IACH;IACA,OAAO,IAAI,CAACH,MAAM,CAACI,mBAAmB;EACxC;EAEAC,qBAAqBA,CAAA,EAAG;IACtB,IAAId,KAAK,EAAE;MACT,OAAOe,OAAO,CAACC,OAAO,CAAC;QACrBL,WAAW,EAAE,IAAI;QACjBC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ;IACA,OAAO,IAAI,CAACH,MAAM,CAACQ,4BAA4B,CAAC,CAAC;EACnD;EAEAC,qBAAqBA,CAAA,EAAG;IACtB,IAAIlB,KAAK,EAAE;MACT,OAAOe,OAAO,CAACC,OAAO,CAAC,CAAC;IAC1B;IACA,OAAO,IAAI,CAACP,MAAM,CAACU,4BAA4B,CAAC,CAAC;EACnD;EAEAC,yBAAyBA,CAAA,EAAG;IAC1B,IAAIpB,KAAK,EAAE;MACT,OAAOe,OAAO,CAACC,OAAO,CAAC,CAAC;IAC1B;IACA,OAAO,IAAI,CAACP,MAAM,CAACY,gCAAgC,CAAC,CAAC;EACvD;EAEAC,yBAAyBA,CAAA,EAAG;IAC1B,IAAItB,KAAK,EAAE;MACT,OAAOe,OAAO,CAACC,OAAO,CAAC,CAAC;IAC1B;IACA,OAAO,IAAI,CAACP,MAAM,CAACc,gCAAgC,CAAC,CAAC;EACvD;EAEAC,OAAOA,CAAC,GAAGC,IAAI,EAAE;IACf,OAAOC,MAAM,CAACF,OAAO,CAAC,GAAGC,IAAI,CAAC;EAChC;AACF;AAIA,eAAexB,qBAAqB,CAAC;EACnCI,OAAO;EACPsB,OAAO,EAAExB,YAAY,CAACyB,WAAW;EACjCxB,SAAS;EACTE,gBAAgB;EAChBuB,YAAY,EAAE,KAAK;EACnBC,kBAAkB,EAAE,KAAK;EACzBC,2BAA2B,EAAE,KAAK;EAClCC,WAAW,EAAEzB;AACf,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}