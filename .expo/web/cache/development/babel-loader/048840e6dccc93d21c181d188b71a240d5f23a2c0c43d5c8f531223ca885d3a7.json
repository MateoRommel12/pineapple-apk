{"ast":null,"code":"const linkProviderId = 'emailLink';\nconst passwordProviderId = 'password';\nexport default class EmailAuthProvider {\n  constructor() {\n    throw new Error('`new EmailAuthProvider()` is not supported on the native Firebase SDKs.');\n  }\n  static get EMAIL_LINK_SIGN_IN_METHOD() {\n    return linkProviderId;\n  }\n  static get EMAIL_PASSWORD_SIGN_IN_METHOD() {\n    return passwordProviderId;\n  }\n  static get PROVIDER_ID() {\n    return passwordProviderId;\n  }\n  static credential(email, password) {\n    return {\n      token: email,\n      secret: password,\n      providerId: passwordProviderId\n    };\n  }\n  static credentialWithLink(email, emailLink) {\n    return {\n      token: email,\n      secret: emailLink,\n      providerId: linkProviderId\n    };\n  }\n}","map":{"version":3,"names":["linkProviderId","passwordProviderId","EmailAuthProvider","constructor","Error","EMAIL_LINK_SIGN_IN_METHOD","EMAIL_PASSWORD_SIGN_IN_METHOD","PROVIDER_ID","credential","email","password","token","secret","providerId","credentialWithLink","emailLink"],"sources":["C:/Users/ACER/Documents/Capstone/node_modules/@react-native-firebase/auth/lib/providers/EmailAuthProvider.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nconst linkProviderId = 'emailLink';\nconst passwordProviderId = 'password';\n\nexport default class EmailAuthProvider {\n  constructor() {\n    throw new Error('`new EmailAuthProvider()` is not supported on the native Firebase SDKs.');\n  }\n\n  static get EMAIL_LINK_SIGN_IN_METHOD() {\n    return linkProviderId;\n  }\n\n  static get EMAIL_PASSWORD_SIGN_IN_METHOD() {\n    return passwordProviderId;\n  }\n\n  static get PROVIDER_ID() {\n    return passwordProviderId;\n  }\n\n  static credential(email, password) {\n    return {\n      token: email,\n      secret: password,\n      providerId: passwordProviderId,\n    };\n  }\n\n  static credentialWithLink(email, emailLink) {\n    return {\n      token: email,\n      secret: emailLink,\n      providerId: linkProviderId,\n    };\n  }\n}\n"],"mappings":"AAiBA,MAAMA,cAAc,GAAG,WAAW;AAClC,MAAMC,kBAAkB,GAAG,UAAU;AAErC,eAAe,MAAMC,iBAAiB,CAAC;EACrCC,WAAWA,CAAA,EAAG;IACZ,MAAM,IAAIC,KAAK,CAAC,yEAAyE,CAAC;EAC5F;EAEA,WAAWC,yBAAyBA,CAAA,EAAG;IACrC,OAAOL,cAAc;EACvB;EAEA,WAAWM,6BAA6BA,CAAA,EAAG;IACzC,OAAOL,kBAAkB;EAC3B;EAEA,WAAWM,WAAWA,CAAA,EAAG;IACvB,OAAON,kBAAkB;EAC3B;EAEA,OAAOO,UAAUA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IACjC,OAAO;MACLC,KAAK,EAAEF,KAAK;MACZG,MAAM,EAAEF,QAAQ;MAChBG,UAAU,EAAEZ;IACd,CAAC;EACH;EAEA,OAAOa,kBAAkBA,CAACL,KAAK,EAAEM,SAAS,EAAE;IAC1C,OAAO;MACLJ,KAAK,EAAEF,KAAK;MACZG,MAAM,EAAEG,SAAS;MACjBF,UAAU,EAAEb;IACd,CAAC;EACH;AACF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}