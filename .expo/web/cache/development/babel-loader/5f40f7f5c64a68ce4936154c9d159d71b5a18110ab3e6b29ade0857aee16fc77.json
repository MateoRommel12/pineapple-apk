{"ast":null,"code":"import RNFBAppModule from './web/RNFBAppModule';\nconst nativeModuleRegistry = {};\nexport function getReactNativeModule(moduleName) {\n  const nativeModule = nativeModuleRegistry[moduleName];\n  if (!nativeModule) {\n    throw new Error(`Native module ${moduleName} is not registered.`);\n  }\n  if (!globalThis.RNFBDebug) {\n    return nativeModule;\n  }\n  return new Proxy(nativeModule, {\n    ownKeys(target) {\n      return Object.keys(target);\n    },\n    get: (_, name) => {\n      if (typeof nativeModule[name] !== 'function') return nativeModule[name];\n      return (...args) => {\n        console.debug(`[RNFB->Native][游댯] ${moduleName}.${name} -> ${JSON.stringify(args)}`);\n        const result = nativeModule[name](...args);\n        if (result && result.then) {\n          return result.then(res => {\n            console.debug(`[RNFB<-Native][游릭] ${moduleName}.${name} <- ${JSON.stringify(res)}`);\n            return res;\n          }, err => {\n            console.debug(`[RNFB<-Native][游댮] ${moduleName}.${name} <- ${JSON.stringify(err)}`);\n            throw err;\n          });\n        }\n        console.debug(`[RNFB<-Native][游릭] ${moduleName}.${name} <- ${JSON.stringify(result)}`);\n        return result;\n      };\n    }\n  });\n}\nexport function setReactNativeModule(moduleName, nativeModule) {\n  nativeModuleRegistry[moduleName] = nativeModule;\n}\nsetReactNativeModule('RNFBAppModule', RNFBAppModule);","map":{"version":3,"names":["RNFBAppModule","nativeModuleRegistry","getReactNativeModule","moduleName","nativeModule","Error","globalThis","RNFBDebug","Proxy","ownKeys","target","Object","keys","get","_","name","args","console","debug","JSON","stringify","result","then","res","err","setReactNativeModule"],"sources":["C:/Users/ACER/Documents/Capstone/node_modules/@react-native-firebase/app/lib/internal/nativeModuleWeb.js"],"sourcesContent":["/* eslint-disable no-console */\n\nimport RNFBAppModule from './web/RNFBAppModule';\n\nconst nativeModuleRegistry = {};\n\nexport function getReactNativeModule(moduleName) {\n  const nativeModule = nativeModuleRegistry[moduleName];\n  // Throw an error if the module is not registered.\n  if (!nativeModule) {\n    throw new Error(`Native module ${moduleName} is not registered.`);\n  }\n  if (!globalThis.RNFBDebug) {\n    return nativeModule;\n  }\n  return new Proxy(nativeModule, {\n    ownKeys(target) {\n      // FIXME - test in new arch context - I don't think Object.keys works\n      return Object.keys(target);\n    },\n    get: (_, name) => {\n      if (typeof nativeModule[name] !== 'function') return nativeModule[name];\n      return (...args) => {\n        console.debug(`[RNFB->Native][游댯] ${moduleName}.${name} -> ${JSON.stringify(args)}`);\n        const result = nativeModule[name](...args);\n        if (result && result.then) {\n          return result.then(\n            res => {\n              console.debug(`[RNFB<-Native][游릭] ${moduleName}.${name} <- ${JSON.stringify(res)}`);\n              return res;\n            },\n            err => {\n              console.debug(`[RNFB<-Native][游댮] ${moduleName}.${name} <- ${JSON.stringify(err)}`);\n              throw err;\n            },\n          );\n        }\n        console.debug(`[RNFB<-Native][游릭] ${moduleName}.${name} <- ${JSON.stringify(result)}`);\n        return result;\n      };\n    },\n  });\n}\n\nexport function setReactNativeModule(moduleName, nativeModule) {\n  nativeModuleRegistry[moduleName] = nativeModule;\n}\n\nsetReactNativeModule('RNFBAppModule', RNFBAppModule);\n"],"mappings":"AAEA,OAAOA,aAAa,MAAM,qBAAqB;AAE/C,MAAMC,oBAAoB,GAAG,CAAC,CAAC;AAE/B,OAAO,SAASC,oBAAoBA,CAACC,UAAU,EAAE;EAC/C,MAAMC,YAAY,GAAGH,oBAAoB,CAACE,UAAU,CAAC;EAErD,IAAI,CAACC,YAAY,EAAE;IACjB,MAAM,IAAIC,KAAK,CAAC,iBAAiBF,UAAU,qBAAqB,CAAC;EACnE;EACA,IAAI,CAACG,UAAU,CAACC,SAAS,EAAE;IACzB,OAAOH,YAAY;EACrB;EACA,OAAO,IAAII,KAAK,CAACJ,YAAY,EAAE;IAC7BK,OAAOA,CAACC,MAAM,EAAE;MAEd,OAAOC,MAAM,CAACC,IAAI,CAACF,MAAM,CAAC;IAC5B,CAAC;IACDG,GAAG,EAAEA,CAACC,CAAC,EAAEC,IAAI,KAAK;MAChB,IAAI,OAAOX,YAAY,CAACW,IAAI,CAAC,KAAK,UAAU,EAAE,OAAOX,YAAY,CAACW,IAAI,CAAC;MACvE,OAAO,CAAC,GAAGC,IAAI,KAAK;QAClBC,OAAO,CAACC,KAAK,CAAC,sBAAsBf,UAAU,IAAIY,IAAI,OAAOI,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,EAAE,CAAC;QACpF,MAAMK,MAAM,GAAGjB,YAAY,CAACW,IAAI,CAAC,CAAC,GAAGC,IAAI,CAAC;QAC1C,IAAIK,MAAM,IAAIA,MAAM,CAACC,IAAI,EAAE;UACzB,OAAOD,MAAM,CAACC,IAAI,CAChBC,GAAG,IAAI;YACLN,OAAO,CAACC,KAAK,CAAC,sBAAsBf,UAAU,IAAIY,IAAI,OAAOI,IAAI,CAACC,SAAS,CAACG,GAAG,CAAC,EAAE,CAAC;YACnF,OAAOA,GAAG;UACZ,CAAC,EACDC,GAAG,IAAI;YACLP,OAAO,CAACC,KAAK,CAAC,sBAAsBf,UAAU,IAAIY,IAAI,OAAOI,IAAI,CAACC,SAAS,CAACI,GAAG,CAAC,EAAE,CAAC;YACnF,MAAMA,GAAG;UACX,CACF,CAAC;QACH;QACAP,OAAO,CAACC,KAAK,CAAC,sBAAsBf,UAAU,IAAIY,IAAI,OAAOI,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,EAAE,CAAC;QACtF,OAAOA,MAAM;MACf,CAAC;IACH;EACF,CAAC,CAAC;AACJ;AAEA,OAAO,SAASI,oBAAoBA,CAACtB,UAAU,EAAEC,YAAY,EAAE;EAC7DH,oBAAoB,CAACE,UAAU,CAAC,GAAGC,YAAY;AACjD;AAEAqB,oBAAoB,CAAC,eAAe,EAAEzB,aAAa,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}