{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport Base64 from './Base64';\nimport { isString } from './validate';\nexport * from './id';\nexport * from './path';\nexport * from './promise';\nexport * from './validate';\nexport { default as Base64 } from './Base64';\nexport { default as ReferenceBase } from './ReferenceBase';\nexport function getDataUrlParts(dataUrlString) {\n  const isBase64 = dataUrlString.includes(';base64');\n  let [mediaType, base64String] = dataUrlString.split(',');\n  if (!mediaType || !base64String) {\n    return {\n      base64String: undefined,\n      mediaType: undefined\n    };\n  }\n  mediaType = mediaType.replace('data:', '').replace(';base64', '');\n  if (base64String && base64String.includes('%')) {\n    base64String = decodeURIComponent(base64String);\n  }\n  if (!isBase64) {\n    base64String = Base64.btoa(base64String);\n  }\n  return {\n    base64String,\n    mediaType\n  };\n}\nexport function once(fn, context) {\n  let onceResult;\n  let ranOnce = false;\n  return function onceInner(...args) {\n    if (!ranOnce) {\n      ranOnce = true;\n      onceResult = fn.apply(context || this, args);\n    }\n    return onceResult;\n  };\n}\nexport function isError(value) {\n  if (Object.prototype.toString.call(value) === '[object Error]') {\n    return true;\n  }\n  return value instanceof Error;\n}\nexport function hasOwnProperty(target, property) {\n  return Object.hasOwnProperty.call(target, property);\n}\nexport function stripTrailingSlash(string) {\n  if (!isString(string)) {\n    return string;\n  }\n  return string.endsWith('/') ? string.slice(0, -1) : string;\n}\nexport const isIOS = Platform.OS === 'ios';\nexport const isAndroid = Platform.OS === 'android';\nexport const isOther = Platform.OS !== 'ios' && Platform.OS !== 'android';\nexport function tryJSONParse(string) {\n  try {\n    return string && JSON.parse(string);\n  } catch (_) {\n    return string;\n  }\n}\nexport function tryJSONStringify(data) {\n  try {\n    return JSON.stringify(data);\n  } catch (_) {\n    return null;\n  }\n}\nconst NO_REPLACEMENT = true;\nconst mapOfDeprecationReplacements = {\n  appCheck: {\n    default: {\n      activate: 'initializeAppCheck()',\n      setTokenAutoRefreshEnabled: 'setTokenAutoRefreshEnabled()',\n      getToken: 'getToken()',\n      getLimitedUseToken: 'getLimitedUseToken()',\n      onTokenChanged: 'onTokenChanged()'\n    },\n    statics: {\n      CustomProvider: 'CustomProvider'\n    }\n  },\n  crashlytics: {\n    default: {\n      checkForUnsentReports: 'checkForUnsentReports()',\n      crash: 'crash()',\n      deleteUnsentReports: 'deleteUnsentReports()',\n      didCrashOnPreviousExecution: 'didCrashOnPreviousExecution()',\n      log: 'log()',\n      setAttribute: 'setAttribute()',\n      setAttributes: 'setAttributes()',\n      setUserId: 'setUserId()',\n      recordError: 'recordError()',\n      sendUnsentReports: 'sendUnsentReports()',\n      setCrashlyticsCollectionEnabled: 'setCrashlyticsCollectionEnabled()'\n    }\n  },\n  firestore: {\n    default: {\n      batch: 'writeBatch()',\n      loadBundle: 'loadBundle()',\n      namedQuery: 'namedQuery()',\n      clearPersistence: 'clearIndexedDbPersistence()',\n      waitForPendingWrites: 'waitForPendingWrites()',\n      terminate: 'terminate()',\n      useEmulator: 'connectFirestoreEmulator()',\n      collection: 'collection()',\n      collectionGroup: 'collectionGroup()',\n      disableNetwork: 'disableNetwork()',\n      doc: 'doc()',\n      enableNetwork: 'enableNetwork()',\n      runTransaction: 'runTransaction()',\n      settings: 'settings()',\n      persistentCacheIndexManager: 'getPersistentCacheIndexManager()'\n    },\n    statics: {\n      setLogLevel: 'setLogLevel()',\n      Filter: 'where()',\n      FieldValue: 'FieldValue',\n      Timestamp: 'Timestamp',\n      GeoPoint: 'GeoPoint',\n      Blob: 'Bytes',\n      FieldPath: 'FieldPath'\n    },\n    FirestoreCollectionReference: {\n      count: 'getCountFromServer()',\n      countFromServer: 'getCountFromServer()',\n      endAt: 'endAt()',\n      endBefore: 'endBefore()',\n      get: 'getDocs()',\n      isEqual: NO_REPLACEMENT,\n      limit: 'limit()',\n      limitToLast: 'limitToLast()',\n      onSnapshot: 'onSnapshot()',\n      orderBy: 'orderBy()',\n      startAfter: 'startAfter()',\n      startAt: 'startAt()',\n      where: 'where()',\n      add: 'addDoc()',\n      doc: 'doc()'\n    },\n    FirestoreDocumentReference: {\n      collection: 'collection()',\n      delete: 'deleteDoc()',\n      get: 'getDoc()',\n      isEqual: NO_REPLACEMENT,\n      onSnapshot: 'onSnapshot()',\n      set: 'setDoc()',\n      update: 'updateDoc()'\n    },\n    FirestoreDocumentSnapshot: {\n      isEqual: NO_REPLACEMENT\n    },\n    FirestoreFieldValue: {\n      arrayRemove: 'arrayRemove()',\n      arrayUnion: 'arrayUnion()',\n      delete: 'deleteField()',\n      increment: 'increment()',\n      serverTimestamp: 'serverTimestamp()'\n    },\n    Filter: {\n      or: 'or()',\n      and: 'and()'\n    },\n    FirestorePersistentCacheIndexManager: {\n      enableIndexAutoCreation: 'enablePersistentCacheIndexAutoCreation()',\n      disableIndexAutoCreation: 'disablePersistentCacheIndexAutoCreation()',\n      deleteAllIndexes: 'deleteAllPersistentCacheIndexes()'\n    },\n    FirestoreTimestamp: {\n      seconds: NO_REPLACEMENT,\n      nanoseconds: NO_REPLACEMENT\n    }\n  }\n};\nconst modularDeprecationMessage = 'This method is deprecated (as well as all React Native Firebase namespaced API) and will be removed in the next major release ' + 'as part of move to match Firebase Web modular SDK API. Please see migration guide for more details: https://rnfirebase.io/migrating-to-v22';\nexport function deprecationConsoleWarning(nameSpace, methodName, instanceName, isModularMethod) {\n  if (!isModularMethod) {\n    const moduleMap = mapOfDeprecationReplacements[nameSpace];\n    if (moduleMap) {\n      const instanceMap = moduleMap[instanceName];\n      const deprecatedMethod = instanceMap[methodName];\n      if (instanceMap && deprecatedMethod) {\n        if (!globalThis.RNFB_SILENCE_MODULAR_DEPRECATION_WARNINGS) {\n          console.warn(createMessage(nameSpace, methodName, instanceName));\n          if (globalThis.RNFB_MODULAR_DEPRECATION_STRICT_MODE === true) {\n            throw new Error('Deprecated API usage detected while in strict mode.');\n          }\n        }\n      }\n    }\n  }\n}\nexport function createMessage(nameSpace, methodName, instanceName = 'default', uniqueMessage = null) {\n  if (uniqueMessage) {\n    return uniqueMessage;\n  }\n  const moduleMap = mapOfDeprecationReplacements[nameSpace];\n  if (moduleMap) {\n    const instance = moduleMap[instanceName];\n    if (instance) {\n      const replacementMethodName = instance[methodName];\n      if (replacementMethodName !== NO_REPLACEMENT) {\n        return modularDeprecationMessage + `. Method called was \\`${methodName}\\`. Please use \\`${replacementMethodName}\\` instead.`;\n      } else {\n        return modularDeprecationMessage + `. Method called was \\`${methodName}\\``;\n      }\n    }\n  }\n}\nfunction getNamespace(target) {\n  if (target.GeoPoint || target.CustomProvider) {\n    return 'firestore';\n  }\n  if (target._config && target._config.namespace) {\n    return target._config.namespace;\n  }\n  const className = target.name ? target.name : target.constructor.name;\n  return Object.keys(mapOfDeprecationReplacements).find(key => {\n    if (mapOfDeprecationReplacements[key][className]) {\n      return key;\n    }\n  });\n}\nfunction getInstanceName(target) {\n  if (target.GeoPoint || target.CustomProvider) {\n    return 'statics';\n  }\n  if (target._config) {\n    return 'default';\n  }\n  if (target.name) {\n    return target.name;\n  }\n  return target.constructor.name;\n}\nexport function createDeprecationProxy(instance) {\n  return new Proxy(instance, {\n    construct(target, args) {\n      return createDeprecationProxy(new target(...args));\n    },\n    get(target, prop, receiver) {\n      const originalMethod = target[prop];\n      if (prop === 'constructor') {\n        return Reflect.get(target, prop, receiver);\n      }\n      if (target && target.constructor && target.constructor.name === 'FirestoreTimestamp') {\n        deprecationConsoleWarning('firestore', prop, 'FirestoreTimestamp', false);\n        return Reflect.get(target, prop, receiver);\n      }\n      if (target && target.name === 'firebaseModuleWithApp') {\n        if (prop === 'Filter' || prop === 'FieldValue' || prop === 'Timestamp' || prop === 'GeoPoint' || prop === 'Blob' || prop === 'FieldPath') {\n          deprecationConsoleWarning('firestore', prop, 'statics', false);\n        }\n        if (prop === 'CustomProvider') {\n          deprecationConsoleWarning('appCheck', prop, 'statics', false);\n        }\n        if (prop !== 'setLogLevel') {\n          return Reflect.get(target, prop, receiver);\n        }\n      }\n      if (typeof originalMethod === 'function') {\n        return function (...args) {\n          const isModularMethod = args.includes(MODULAR_DEPRECATION_ARG);\n          const instanceName = getInstanceName(target);\n          const nameSpace = getNamespace(target);\n          deprecationConsoleWarning(nameSpace, prop, instanceName, isModularMethod);\n          return originalMethod.apply(target, filterModularArgument(args));\n        };\n      }\n      return Reflect.get(target, prop, receiver);\n    }\n  });\n}\nexport const MODULAR_DEPRECATION_ARG = 'react-native-firebase-modular-method-call';\nexport function filterModularArgument(list) {\n  return list.filter(arg => arg !== MODULAR_DEPRECATION_ARG);\n}\nexport function warnIfNotModularCall(args, replacementMethodName = '') {\n  for (let i = 0; i < args.length; i++) {\n    if (args[i] === MODULAR_DEPRECATION_ARG) {\n      return;\n    }\n  }\n  let message = modularDeprecationMessage;\n  if (replacementMethodName.length > 0) {\n    message += ` Please use \\`${replacementMethodName}\\` instead.`;\n  }\n  if (!globalThis.RNFB_SILENCE_MODULAR_DEPRECATION_WARNINGS) {\n    console.warn(message);\n    if (globalThis.RNFB_MODULAR_DEPRECATION_STRICT_MODE === true) {\n      throw new Error('Deprecated API usage detected while in strict mode.');\n    }\n  }\n}","map":{"version":3,"names":["Base64","isString","default","ReferenceBase","getDataUrlParts","dataUrlString","isBase64","includes","mediaType","base64String","split","undefined","replace","decodeURIComponent","btoa","once","fn","context","onceResult","ranOnce","onceInner","args","apply","isError","value","Object","prototype","toString","call","Error","hasOwnProperty","target","property","stripTrailingSlash","string","endsWith","slice","isIOS","Platform","OS","isAndroid","isOther","tryJSONParse","JSON","parse","_","tryJSONStringify","data","stringify","NO_REPLACEMENT","mapOfDeprecationReplacements","appCheck","activate","setTokenAutoRefreshEnabled","getToken","getLimitedUseToken","onTokenChanged","statics","CustomProvider","crashlytics","checkForUnsentReports","crash","deleteUnsentReports","didCrashOnPreviousExecution","log","setAttribute","setAttributes","setUserId","recordError","sendUnsentReports","setCrashlyticsCollectionEnabled","firestore","batch","loadBundle","namedQuery","clearPersistence","waitForPendingWrites","terminate","useEmulator","collection","collectionGroup","disableNetwork","doc","enableNetwork","runTransaction","settings","persistentCacheIndexManager","setLogLevel","Filter","FieldValue","Timestamp","GeoPoint","Blob","FieldPath","FirestoreCollectionReference","count","countFromServer","endAt","endBefore","get","isEqual","limit","limitToLast","onSnapshot","orderBy","startAfter","startAt","where","add","FirestoreDocumentReference","delete","set","update","FirestoreDocumentSnapshot","FirestoreFieldValue","arrayRemove","arrayUnion","increment","serverTimestamp","or","and","FirestorePersistentCacheIndexManager","enableIndexAutoCreation","disableIndexAutoCreation","deleteAllIndexes","FirestoreTimestamp","seconds","nanoseconds","modularDeprecationMessage","deprecationConsoleWarning","nameSpace","methodName","instanceName","isModularMethod","moduleMap","instanceMap","deprecatedMethod","globalThis","RNFB_SILENCE_MODULAR_DEPRECATION_WARNINGS","console","warn","createMessage","RNFB_MODULAR_DEPRECATION_STRICT_MODE","uniqueMessage","instance","replacementMethodName","getNamespace","_config","namespace","className","name","constructor","keys","find","key","getInstanceName","createDeprecationProxy","Proxy","construct","prop","receiver","originalMethod","Reflect","MODULAR_DEPRECATION_ARG","filterModularArgument","list","filter","arg","warnIfNotModularCall","i","length","message"],"sources":["C:/Users/ACER/Documents/Capstone/node_modules/@react-native-firebase/app/lib/common/index.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Platform } from 'react-native';\nimport Base64 from './Base64';\nimport { isString } from './validate';\n\nexport * from './id';\nexport * from './path';\nexport * from './promise';\nexport * from './validate';\n\nexport { default as Base64 } from './Base64';\nexport { default as ReferenceBase } from './ReferenceBase';\n\nexport function getDataUrlParts(dataUrlString) {\n  const isBase64 = dataUrlString.includes(';base64');\n  let [mediaType, base64String] = dataUrlString.split(',');\n  if (!mediaType || !base64String) {\n    return { base64String: undefined, mediaType: undefined };\n  }\n  mediaType = mediaType.replace('data:', '').replace(';base64', '');\n  if (base64String && base64String.includes('%')) {\n    base64String = decodeURIComponent(base64String);\n  }\n  if (!isBase64) {\n    base64String = Base64.btoa(base64String);\n  }\n  return { base64String, mediaType };\n}\n\nexport function once(fn, context) {\n  let onceResult;\n  let ranOnce = false;\n\n  return function onceInner(...args) {\n    if (!ranOnce) {\n      ranOnce = true;\n      onceResult = fn.apply(context || this, args);\n    }\n\n    return onceResult;\n  };\n}\n\nexport function isError(value) {\n  if (Object.prototype.toString.call(value) === '[object Error]') {\n    return true;\n  }\n\n  return value instanceof Error;\n}\n\nexport function hasOwnProperty(target, property) {\n  return Object.hasOwnProperty.call(target, property);\n}\n\n/**\n * Remove a trailing forward slash from a string if it exists\n *\n * @param string\n * @returns {*}\n */\nexport function stripTrailingSlash(string) {\n  if (!isString(string)) {\n    return string;\n  }\n  return string.endsWith('/') ? string.slice(0, -1) : string;\n}\n\nexport const isIOS = Platform.OS === 'ios';\n\nexport const isAndroid = Platform.OS === 'android';\n\nexport const isOther = Platform.OS !== 'ios' && Platform.OS !== 'android';\n\nexport function tryJSONParse(string) {\n  try {\n    return string && JSON.parse(string);\n  } catch (_) {\n    return string;\n  }\n}\n\nexport function tryJSONStringify(data) {\n  try {\n    return JSON.stringify(data);\n  } catch (_) {\n    return null;\n  }\n}\n\n// Used to indicate if there is no corresponding modular function\nconst NO_REPLACEMENT = true;\n\nconst mapOfDeprecationReplacements = {\n  appCheck: {\n    default: {\n      activate: 'initializeAppCheck()',\n      setTokenAutoRefreshEnabled: 'setTokenAutoRefreshEnabled()',\n      getToken: 'getToken()',\n      getLimitedUseToken: 'getLimitedUseToken()',\n      onTokenChanged: 'onTokenChanged()',\n    },\n    statics: {\n      CustomProvider: 'CustomProvider',\n    },\n  },\n  crashlytics: {\n    default: {\n      checkForUnsentReports: 'checkForUnsentReports()',\n      crash: 'crash()',\n      deleteUnsentReports: 'deleteUnsentReports()',\n      didCrashOnPreviousExecution: 'didCrashOnPreviousExecution()',\n      log: 'log()',\n      setAttribute: 'setAttribute()',\n      setAttributes: 'setAttributes()',\n      setUserId: 'setUserId()',\n      recordError: 'recordError()',\n      sendUnsentReports: 'sendUnsentReports()',\n      setCrashlyticsCollectionEnabled: 'setCrashlyticsCollectionEnabled()',\n    },\n  },\n  firestore: {\n    default: {\n      batch: 'writeBatch()',\n      loadBundle: 'loadBundle()',\n      namedQuery: 'namedQuery()',\n      clearPersistence: 'clearIndexedDbPersistence()',\n      waitForPendingWrites: 'waitForPendingWrites()',\n      terminate: 'terminate()',\n      useEmulator: 'connectFirestoreEmulator()',\n      collection: 'collection()',\n      collectionGroup: 'collectionGroup()',\n      disableNetwork: 'disableNetwork()',\n      doc: 'doc()',\n      enableNetwork: 'enableNetwork()',\n      runTransaction: 'runTransaction()',\n      settings: 'settings()',\n      persistentCacheIndexManager: 'getPersistentCacheIndexManager()',\n    },\n    statics: {\n      setLogLevel: 'setLogLevel()',\n      Filter: 'where()',\n      FieldValue: 'FieldValue',\n      Timestamp: 'Timestamp',\n      GeoPoint: 'GeoPoint',\n      Blob: 'Bytes',\n      FieldPath: 'FieldPath',\n    },\n    FirestoreCollectionReference: {\n      count: 'getCountFromServer()',\n      countFromServer: 'getCountFromServer()',\n      endAt: 'endAt()',\n      endBefore: 'endBefore()',\n      get: 'getDocs()',\n      isEqual: NO_REPLACEMENT,\n      limit: 'limit()',\n      limitToLast: 'limitToLast()',\n      onSnapshot: 'onSnapshot()',\n      orderBy: 'orderBy()',\n      startAfter: 'startAfter()',\n      startAt: 'startAt()',\n      where: 'where()',\n      add: 'addDoc()',\n      doc: 'doc()',\n    },\n    FirestoreDocumentReference: {\n      collection: 'collection()',\n      delete: 'deleteDoc()',\n      get: 'getDoc()',\n      isEqual: NO_REPLACEMENT,\n      onSnapshot: 'onSnapshot()',\n      set: 'setDoc()',\n      update: 'updateDoc()',\n    },\n    FirestoreDocumentSnapshot: {\n      isEqual: NO_REPLACEMENT,\n    },\n    FirestoreFieldValue: {\n      arrayRemove: 'arrayRemove()',\n      arrayUnion: 'arrayUnion()',\n      delete: 'deleteField()',\n      increment: 'increment()',\n      serverTimestamp: 'serverTimestamp()',\n    },\n    Filter: {\n      or: 'or()',\n      and: 'and()',\n    },\n    FirestorePersistentCacheIndexManager: {\n      enableIndexAutoCreation: 'enablePersistentCacheIndexAutoCreation()',\n      disableIndexAutoCreation: 'disablePersistentCacheIndexAutoCreation()',\n      deleteAllIndexes: 'deleteAllPersistentCacheIndexes()',\n    },\n    FirestoreTimestamp: {\n      seconds: NO_REPLACEMENT,\n      nanoseconds: NO_REPLACEMENT,\n    },\n  },\n};\n\nconst modularDeprecationMessage =\n  'This method is deprecated (as well as all React Native Firebase namespaced API) and will be removed in the next major release ' +\n  'as part of move to match Firebase Web modular SDK API. Please see migration guide for more details: https://rnfirebase.io/migrating-to-v22';\n\nexport function deprecationConsoleWarning(nameSpace, methodName, instanceName, isModularMethod) {\n  if (!isModularMethod) {\n    const moduleMap = mapOfDeprecationReplacements[nameSpace];\n    if (moduleMap) {\n      const instanceMap = moduleMap[instanceName];\n      const deprecatedMethod = instanceMap[methodName];\n      if (instanceMap && deprecatedMethod) {\n        if (!globalThis.RNFB_SILENCE_MODULAR_DEPRECATION_WARNINGS) {\n          // eslint-disable-next-line no-console\n          console.warn(createMessage(nameSpace, methodName, instanceName));\n\n          if (globalThis.RNFB_MODULAR_DEPRECATION_STRICT_MODE === true) {\n            throw new Error('Deprecated API usage detected while in strict mode.');\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function createMessage(\n  nameSpace,\n  methodName,\n  instanceName = 'default',\n  uniqueMessage = null,\n) {\n  if (uniqueMessage) {\n    // Unique deprecation message used for testing\n    return uniqueMessage;\n  }\n\n  const moduleMap = mapOfDeprecationReplacements[nameSpace];\n  if (moduleMap) {\n    const instance = moduleMap[instanceName];\n    if (instance) {\n      const replacementMethodName = instance[methodName];\n\n      if (replacementMethodName !== NO_REPLACEMENT) {\n        return (\n          modularDeprecationMessage +\n          `. Method called was \\`${methodName}\\`. Please use \\`${replacementMethodName}\\` instead.`\n        );\n      } else {\n        return modularDeprecationMessage + `. Method called was \\`${methodName}\\``;\n      }\n    }\n  }\n}\n\nfunction getNamespace(target) {\n  if (target.GeoPoint || target.CustomProvider) {\n    // target is statics object. GeoPoint - Firestore, CustomProvider - AppCheck\n    return 'firestore';\n  }\n  if (target._config && target._config.namespace) {\n    return target._config.namespace;\n  }\n  const className = target.name ? target.name : target.constructor.name;\n  return Object.keys(mapOfDeprecationReplacements).find(key => {\n    if (mapOfDeprecationReplacements[key][className]) {\n      return key;\n    }\n  });\n}\n\nfunction getInstanceName(target) {\n  if (target.GeoPoint || target.CustomProvider) {\n    // target is statics object. GeoPoint - Firestore, CustomProvider - AppCheck\n    return 'statics';\n  }\n  if (target._config) {\n    // module class instance, we use default to store map of deprecated methods\n    return 'default';\n  }\n  if (target.name) {\n    // It's a function which has a name property unlike classes\n    return target.name;\n  }\n  // It's a class instance\n  return target.constructor.name;\n}\n\nexport function createDeprecationProxy(instance) {\n  return new Proxy(instance, {\n    construct(target, args) {\n      // needed for Timestamp which we pass as static, when we construct new instance, we need to wrap it in proxy again.\n      return createDeprecationProxy(new target(...args));\n    },\n    get(target, prop, receiver) {\n      const originalMethod = target[prop];\n\n      if (prop === 'constructor') {\n        return Reflect.get(target, prop, receiver);\n      }\n\n      if (target && target.constructor && target.constructor.name === 'FirestoreTimestamp') {\n        deprecationConsoleWarning('firestore', prop, 'FirestoreTimestamp', false);\n        return Reflect.get(target, prop, receiver);\n      }\n\n      if (target && target.name === 'firebaseModuleWithApp') {\n        // statics\n        if (\n          prop === 'Filter' ||\n          prop === 'FieldValue' ||\n          prop === 'Timestamp' ||\n          prop === 'GeoPoint' ||\n          prop === 'Blob' ||\n          prop === 'FieldPath'\n        ) {\n          deprecationConsoleWarning('firestore', prop, 'statics', false);\n        }\n        if (prop === 'CustomProvider') {\n          deprecationConsoleWarning('appCheck', prop, 'statics', false);\n        }\n\n        if (prop !== 'setLogLevel') {\n          // we want to capture setLogLevel function call which we do below\n          return Reflect.get(target, prop, receiver);\n        }\n      }\n\n      if (typeof originalMethod === 'function') {\n        return function (...args) {\n          const isModularMethod = args.includes(MODULAR_DEPRECATION_ARG);\n          const instanceName = getInstanceName(target);\n          const nameSpace = getNamespace(target);\n\n          deprecationConsoleWarning(nameSpace, prop, instanceName, isModularMethod);\n\n          return originalMethod.apply(target, filterModularArgument(args));\n        };\n      }\n      return Reflect.get(target, prop, receiver);\n    },\n  });\n}\n\nexport const MODULAR_DEPRECATION_ARG = 'react-native-firebase-modular-method-call';\n\nexport function filterModularArgument(list) {\n  return list.filter(arg => arg !== MODULAR_DEPRECATION_ARG);\n}\n\nexport function warnIfNotModularCall(args, replacementMethodName = '') {\n  for (let i = 0; i < args.length; i++) {\n    if (args[i] === MODULAR_DEPRECATION_ARG) {\n      return;\n    }\n  }\n\n  let message = modularDeprecationMessage;\n  if (replacementMethodName.length > 0) {\n    message += ` Please use \\`${replacementMethodName}\\` instead.`;\n  }\n\n  if (!globalThis.RNFB_SILENCE_MODULAR_DEPRECATION_WARNINGS) {\n    // eslint-disable-next-line no-console\n    console.warn(message);\n\n    if (globalThis.RNFB_MODULAR_DEPRECATION_STRICT_MODE === true) {\n      throw new Error('Deprecated API usage detected while in strict mode.');\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}