{"ast":null,"code":"import { isAndroid, isFunction, isIOS, promiseDefer } from '@react-native-firebase/app/lib/common';\nimport NativeFirebaseError from '@react-native-firebase/app/lib/internal/NativeFirebaseError';\nlet REQUEST_ID = 0;\nexport default class PhoneAuthListener {\n  constructor(auth, phoneNumber, timeout, forceResend) {\n    this._auth = auth;\n    this._reject = null;\n    this._resolve = null;\n    this._promise = null;\n    this._jsStack = new Error().stack;\n    this._timeout = timeout || 20;\n    this._phoneAuthRequestId = REQUEST_ID++;\n    this._forceResending = forceResend || false;\n    this._internalEvents = {\n      codeSent: `phone:auth:${this._phoneAuthRequestId}:onCodeSent`,\n      verificationFailed: `phone:auth:${this._phoneAuthRequestId}:onVerificationFailed`,\n      verificationComplete: `phone:auth:${this._phoneAuthRequestId}:onVerificationComplete`,\n      codeAutoRetrievalTimeout: `phone:auth:${this._phoneAuthRequestId}:onCodeAutoRetrievalTimeout`\n    };\n    this._publicEvents = {\n      error: `phone:auth:${this._phoneAuthRequestId}:error`,\n      event: `phone:auth:${this._phoneAuthRequestId}:event`,\n      success: `phone:auth:${this._phoneAuthRequestId}:success`\n    };\n    this._subscribeToEvents();\n    if (isAndroid) {\n      this._auth.native.verifyPhoneNumber(phoneNumber, this._phoneAuthRequestId + '', this._timeout, this._forceResending);\n    }\n    if (isIOS) {\n      this._auth.native.verifyPhoneNumber(phoneNumber, this._phoneAuthRequestId + '');\n    }\n  }\n  _subscribeToEvents() {\n    const events = Object.keys(this._internalEvents);\n    for (let i = 0, len = events.length; i < len; i++) {\n      const type = events[i];\n      const subscription = this._auth.emitter.addListener(this._internalEvents[type], event => {\n        this[`_${type}Handler`](event);\n        subscription.remove();\n      });\n    }\n  }\n  _addUserObserver(observer) {\n    this._auth.emitter.addListener(this._publicEvents.event, observer);\n  }\n  _emitToObservers(snapshot) {\n    this._auth.emitter.emit(this._publicEvents.event, snapshot);\n  }\n  _emitToErrorCb(snapshot) {\n    const {\n      error\n    } = snapshot;\n    if (this._reject) {\n      this._reject(error);\n    }\n    this._auth.emitter.emit(this._publicEvents.error, error);\n  }\n  _emitToSuccessCb(snapshot) {\n    if (this._resolve) {\n      this._resolve(snapshot);\n    }\n    this._auth.emitter.emit(this._publicEvents.success, snapshot);\n  }\n  _removeAllListeners() {\n    setTimeout(() => {\n      Object.values(this._internalEvents).forEach(event => {\n        this._auth.emitter.removeAllListeners(event);\n      });\n      Object.values(this._publicEvents).forEach(publicEvent => {\n        this._auth.emitter.removeAllListeners(publicEvent);\n      });\n    }, 0);\n  }\n  _promiseDeferred() {\n    if (!this._promise) {\n      const {\n        promise,\n        resolve,\n        reject\n      } = promiseDefer();\n      this._promise = promise;\n      this._resolve = resolve;\n      this._reject = reject;\n    }\n  }\n  _codeSentHandler(credential) {\n    const snapshot = {\n      verificationId: credential.verificationId,\n      code: null,\n      error: null,\n      state: 'sent'\n    };\n    this._emitToObservers(snapshot);\n    if (isIOS) {\n      this._emitToSuccessCb(snapshot);\n    }\n    if (isAndroid) {}\n  }\n  _codeAutoRetrievalTimeoutHandler(credential) {\n    const snapshot = {\n      verificationId: credential.verificationId,\n      code: null,\n      error: null,\n      state: 'timeout'\n    };\n    this._emitToObservers(snapshot);\n    this._emitToSuccessCb(snapshot);\n  }\n  _verificationCompleteHandler(credential) {\n    const snapshot = {\n      verificationId: credential.verificationId,\n      code: credential.code || null,\n      error: null,\n      state: 'verified'\n    };\n    this._emitToObservers(snapshot);\n    this._emitToSuccessCb(snapshot);\n    this._removeAllListeners();\n  }\n  _verificationFailedHandler(state) {\n    const snapshot = {\n      verificationId: state.verificationId,\n      code: null,\n      error: null,\n      state: 'error'\n    };\n    snapshot.error = new NativeFirebaseError({\n      userInfo: state.error\n    }, this._jsStack, 'auth');\n    this._emitToObservers(snapshot);\n    this._emitToErrorCb(snapshot);\n    this._removeAllListeners();\n  }\n  on(event, observer, errorCb, successCb) {\n    if (event !== 'state_changed') {\n      throw new Error(\"firebase.auth.PhoneAuthListener.on(*, _, _, _) 'event' must equal 'state_changed'.\");\n    }\n    if (!isFunction(observer)) {\n      throw new Error(\"firebase.auth.PhoneAuthListener.on(_, *, _, _) 'observer' must be a function.\");\n    }\n    this._addUserObserver(observer);\n    if (isFunction(errorCb)) {\n      const subscription = this._auth.emitter.addListener(this._publicEvents.error, event => {\n        subscription.remove();\n        errorCb(event);\n      });\n    }\n    if (isFunction(successCb)) {\n      const subscription = this._auth.emitter.addListener(this._publicEvents.success, event => {\n        subscription.remove();\n        successCb(event);\n      });\n    }\n    return this;\n  }\n  then(fn) {\n    this._promiseDeferred();\n    if (this._promise) {\n      return this._promise.then.bind(this._promise)(fn);\n    }\n    return undefined;\n  }\n  catch(fn) {\n    this._promiseDeferred();\n    if (this._promise) {\n      return this._promise.catch.bind(this._promise)(fn);\n    }\n    return undefined;\n  }\n}","map":{"version":3,"names":["isAndroid","isFunction","isIOS","promiseDefer","NativeFirebaseError","REQUEST_ID","PhoneAuthListener","constructor","auth","phoneNumber","timeout","forceResend","_auth","_reject","_resolve","_promise","_jsStack","Error","stack","_timeout","_phoneAuthRequestId","_forceResending","_internalEvents","codeSent","verificationFailed","verificationComplete","codeAutoRetrievalTimeout","_publicEvents","error","event","success","_subscribeToEvents","native","verifyPhoneNumber","events","Object","keys","i","len","length","type","subscription","emitter","addListener","remove","_addUserObserver","observer","_emitToObservers","snapshot","emit","_emitToErrorCb","_emitToSuccessCb","_removeAllListeners","setTimeout","values","forEach","removeAllListeners","publicEvent","_promiseDeferred","promise","resolve","reject","_codeSentHandler","credential","verificationId","code","state","_codeAutoRetrievalTimeoutHandler","_verificationCompleteHandler","_verificationFailedHandler","userInfo","on","errorCb","successCb","then","fn","bind","undefined","catch"],"sources":["C:/Users/ACER/Documents/Capstone/node_modules/@react-native-firebase/auth/lib/PhoneAuthListener.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isAndroid, isFunction, isIOS, promiseDefer } from '@react-native-firebase/app/lib/common';\nimport NativeFirebaseError from '@react-native-firebase/app/lib/internal/NativeFirebaseError';\n\nlet REQUEST_ID = 0;\n\nexport default class PhoneAuthListener {\n  constructor(auth, phoneNumber, timeout, forceResend) {\n    this._auth = auth;\n    this._reject = null;\n    this._resolve = null;\n    this._promise = null;\n    this._jsStack = new Error().stack;\n\n    this._timeout = timeout || 20;\n    this._phoneAuthRequestId = REQUEST_ID++;\n    this._forceResending = forceResend || false;\n\n    // internal events\n    this._internalEvents = {\n      codeSent: `phone:auth:${this._phoneAuthRequestId}:onCodeSent`,\n      verificationFailed: `phone:auth:${this._phoneAuthRequestId}:onVerificationFailed`,\n      verificationComplete: `phone:auth:${this._phoneAuthRequestId}:onVerificationComplete`,\n      codeAutoRetrievalTimeout: `phone:auth:${this._phoneAuthRequestId}:onCodeAutoRetrievalTimeout`,\n    };\n\n    // user observer events\n    this._publicEvents = {\n      error: `phone:auth:${this._phoneAuthRequestId}:error`,\n      event: `phone:auth:${this._phoneAuthRequestId}:event`,\n      success: `phone:auth:${this._phoneAuthRequestId}:success`,\n    };\n\n    this._subscribeToEvents();\n\n    if (isAndroid) {\n      this._auth.native.verifyPhoneNumber(\n        phoneNumber,\n        this._phoneAuthRequestId + '',\n        this._timeout,\n        this._forceResending,\n      );\n    }\n\n    if (isIOS) {\n      this._auth.native.verifyPhoneNumber(phoneNumber, this._phoneAuthRequestId + '');\n    }\n  }\n\n  _subscribeToEvents() {\n    const events = Object.keys(this._internalEvents);\n\n    for (let i = 0, len = events.length; i < len; i++) {\n      const type = events[i];\n      const subscription = this._auth.emitter.addListener(this._internalEvents[type], event => {\n        this[`_${type}Handler`](event);\n        subscription.remove();\n      });\n    }\n  }\n\n  _addUserObserver(observer) {\n    this._auth.emitter.addListener(this._publicEvents.event, observer);\n  }\n\n  _emitToObservers(snapshot) {\n    this._auth.emitter.emit(this._publicEvents.event, snapshot);\n  }\n\n  _emitToErrorCb(snapshot) {\n    const { error } = snapshot;\n    if (this._reject) {\n      this._reject(error);\n    }\n    this._auth.emitter.emit(this._publicEvents.error, error);\n  }\n\n  _emitToSuccessCb(snapshot) {\n    if (this._resolve) {\n      this._resolve(snapshot);\n    }\n    this._auth.emitter.emit(this._publicEvents.success, snapshot);\n  }\n\n  _removeAllListeners() {\n    setTimeout(() => {\n      // move to next event loop - not sure if needed\n      // internal listeners\n      Object.values(this._internalEvents).forEach(event => {\n        this._auth.emitter.removeAllListeners(event);\n      });\n\n      // user observer listeners\n      Object.values(this._publicEvents).forEach(publicEvent => {\n        this._auth.emitter.removeAllListeners(publicEvent);\n      });\n    }, 0);\n  }\n\n  _promiseDeferred() {\n    if (!this._promise) {\n      const { promise, resolve, reject } = promiseDefer();\n      this._promise = promise;\n      this._resolve = resolve;\n      this._reject = reject;\n    }\n  }\n\n  /* --------------------------\n   --- INTERNAL EVENT HANDLERS\n   ---------------------------- */\n\n  _codeSentHandler(credential) {\n    const snapshot = {\n      verificationId: credential.verificationId,\n      code: null,\n      error: null,\n      state: 'sent',\n    };\n\n    this._emitToObservers(snapshot);\n\n    if (isIOS) {\n      this._emitToSuccessCb(snapshot);\n    }\n\n    if (isAndroid) {\n      // android can auto retrieve so we don't emit to successCb immediately,\n      // if auto retrieve times out then that will emit to successCb\n    }\n  }\n\n  _codeAutoRetrievalTimeoutHandler(credential) {\n    const snapshot = {\n      verificationId: credential.verificationId,\n      code: null,\n      error: null,\n      state: 'timeout',\n    };\n\n    this._emitToObservers(snapshot);\n    this._emitToSuccessCb(snapshot);\n  }\n\n  _verificationCompleteHandler(credential) {\n    const snapshot = {\n      verificationId: credential.verificationId,\n      code: credential.code || null,\n      error: null,\n      state: 'verified',\n    };\n\n    this._emitToObservers(snapshot);\n    this._emitToSuccessCb(snapshot);\n    this._removeAllListeners();\n  }\n\n  _verificationFailedHandler(state) {\n    const snapshot = {\n      verificationId: state.verificationId,\n      code: null,\n      error: null,\n      state: 'error',\n    };\n\n    snapshot.error = new NativeFirebaseError({ userInfo: state.error }, this._jsStack, 'auth');\n\n    this._emitToObservers(snapshot);\n    this._emitToErrorCb(snapshot);\n    this._removeAllListeners();\n  }\n\n  /* -------------\n   -- PUBLIC API\n   --------------*/\n\n  on(event, observer, errorCb, successCb) {\n    if (event !== 'state_changed') {\n      throw new Error(\n        \"firebase.auth.PhoneAuthListener.on(*, _, _, _) 'event' must equal 'state_changed'.\",\n      );\n    }\n\n    if (!isFunction(observer)) {\n      throw new Error(\n        \"firebase.auth.PhoneAuthListener.on(_, *, _, _) 'observer' must be a function.\",\n      );\n    }\n\n    this._addUserObserver(observer);\n\n    if (isFunction(errorCb)) {\n      const subscription = this._auth.emitter.addListener(this._publicEvents.error, event => {\n        subscription.remove();\n        errorCb(event);\n      });\n    }\n\n    if (isFunction(successCb)) {\n      const subscription = this._auth.emitter.addListener(this._publicEvents.success, event => {\n        subscription.remove();\n        successCb(event);\n      });\n    }\n\n    return this;\n  }\n\n  then(fn) {\n    this._promiseDeferred();\n    if (this._promise) {\n      return this._promise.then.bind(this._promise)(fn);\n    }\n    return undefined;\n  }\n\n  catch(fn) {\n    this._promiseDeferred();\n    if (this._promise) {\n      return this._promise.catch.bind(this._promise)(fn);\n    }\n    return undefined;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}