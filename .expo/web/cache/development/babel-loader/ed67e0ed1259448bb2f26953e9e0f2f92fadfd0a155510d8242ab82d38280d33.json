{"ast":null,"code":"import { APP_NATIVE_MODULE } from '../constants';\nimport NativeFirebaseError from '../NativeFirebaseError';\nimport RNFBNativeEventEmitter from '../RNFBNativeEventEmitter';\nimport SharedEventEmitter from '../SharedEventEmitter';\nimport { getReactNativeModule } from '../nativeModule';\nimport { isAndroid, isIOS } from '../../common';\nconst NATIVE_MODULE_REGISTRY = {};\nconst NATIVE_MODULE_EVENT_SUBSCRIPTIONS = {};\nfunction nativeModuleKey(module) {\n  return `${module._customUrlOrRegion || ''}:${module.app.name}:${module._config.namespace}`;\n}\nfunction nativeModuleMethodWrapped(namespace, method, argToPrepend) {\n  return (...args) => {\n    const possiblePromise = method(...[...argToPrepend, ...args]);\n    if (possiblePromise && possiblePromise.then) {\n      const jsStack = new Error().stack;\n      return possiblePromise.catch(nativeError => Promise.reject(new NativeFirebaseError(nativeError, jsStack, namespace)));\n    }\n    return possiblePromise;\n  };\n}\nfunction nativeModuleWrapped(namespace, NativeModule, argToPrepend) {\n  const native = {};\n  if (!NativeModule) {\n    return NativeModule;\n  }\n  let properties = Object.keys(Object.getPrototypeOf(NativeModule));\n  if (!properties.length) properties = Object.keys(NativeModule);\n  for (let i = 0, len = properties.length; i < len; i++) {\n    const property = properties[i];\n    if (typeof NativeModule[property] === 'function') {\n      native[property] = nativeModuleMethodWrapped(namespace, NativeModule[property], argToPrepend);\n    } else {\n      native[property] = NativeModule[property];\n    }\n  }\n  return native;\n}\nfunction initialiseNativeModule(module) {\n  const config = module._config;\n  const key = nativeModuleKey(module);\n  const {\n    namespace,\n    nativeEvents,\n    nativeModuleName,\n    hasMultiAppSupport,\n    hasCustomUrlOrRegionSupport,\n    disablePrependCustomUrlOrRegion\n  } = config;\n  const multiModuleRoot = {};\n  const multiModule = Array.isArray(nativeModuleName);\n  const nativeModuleNames = multiModule ? nativeModuleName : [nativeModuleName];\n  for (let i = 0; i < nativeModuleNames.length; i++) {\n    const nativeModule = getReactNativeModule(nativeModuleNames[i]);\n    if (!multiModule && !nativeModule) {\n      throw new Error(getMissingModuleHelpText(namespace));\n    }\n    if (multiModule) {\n      multiModuleRoot[nativeModuleNames[i]] = !!nativeModule;\n    }\n    const argToPrepend = [];\n    if (hasMultiAppSupport) {\n      argToPrepend.push(module.app.name);\n    }\n    if (hasCustomUrlOrRegionSupport && !disablePrependCustomUrlOrRegion) {\n      argToPrepend.push(module._customUrlOrRegion);\n    }\n    Object.assign(multiModuleRoot, nativeModuleWrapped(namespace, nativeModule, argToPrepend));\n  }\n  if (nativeEvents && nativeEvents.length) {\n    for (let i = 0, len = nativeEvents.length; i < len; i++) {\n      subscribeToNativeModuleEvent(nativeEvents[i]);\n    }\n  }\n  Object.freeze(multiModuleRoot);\n  NATIVE_MODULE_REGISTRY[key] = multiModuleRoot;\n  return NATIVE_MODULE_REGISTRY[key];\n}\nfunction subscribeToNativeModuleEvent(eventName) {\n  if (!NATIVE_MODULE_EVENT_SUBSCRIPTIONS[eventName]) {\n    RNFBNativeEventEmitter.addListener(eventName, event => {\n      if (event.appName && event.databaseId) {\n        SharedEventEmitter.emit(`${event.appName}-${event.databaseId}-${eventName}`, event);\n      } else if (event.appName) {\n        SharedEventEmitter.emit(`${event.appName}-${eventName}`, event);\n      } else {\n        SharedEventEmitter.emit(eventName, event);\n      }\n    });\n    NATIVE_MODULE_EVENT_SUBSCRIPTIONS[eventName] = true;\n  }\n}\nfunction getMissingModuleHelpText(namespace) {\n  const snippet = `firebase.${namespace}()`;\n  if (isIOS || isAndroid) {\n    return `You attempted to use a Firebase module that's not installed natively on your project by calling ${snippet}.` + `\\r\\n\\r\\nEnsure you have installed the npm package '@react-native-firebase/${namespace}',` + ' have imported it in your project, and have rebuilt your native application.';\n  }\n  return `You attempted to use a Firebase module that's not installed on your project by calling ${snippet}.` + `\\r\\n\\r\\nEnsure you have installed the npm package '@react-native-firebase/${namespace}' and` + ' have imported it in your project.';\n}\nexport function getNativeModule(module) {\n  const key = nativeModuleKey(module);\n  if (NATIVE_MODULE_REGISTRY[key]) {\n    return NATIVE_MODULE_REGISTRY[key];\n  }\n  return initialiseNativeModule(module);\n}\nexport function getAppModule() {\n  if (NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE]) {\n    return NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE];\n  }\n  const namespace = 'app';\n  const nativeModule = getReactNativeModule(APP_NATIVE_MODULE);\n  if (!nativeModule) {\n    throw new Error(getMissingModuleHelpText(namespace));\n  }\n  NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE] = nativeModuleWrapped(namespace, nativeModule, []);\n  return NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE];\n}","map":{"version":3,"names":["APP_NATIVE_MODULE","NativeFirebaseError","RNFBNativeEventEmitter","SharedEventEmitter","getReactNativeModule","isAndroid","isIOS","NATIVE_MODULE_REGISTRY","NATIVE_MODULE_EVENT_SUBSCRIPTIONS","nativeModuleKey","module","_customUrlOrRegion","app","name","_config","namespace","nativeModuleMethodWrapped","method","argToPrepend","args","possiblePromise","then","jsStack","Error","stack","catch","nativeError","Promise","reject","nativeModuleWrapped","NativeModule","native","properties","Object","keys","getPrototypeOf","length","i","len","property","initialiseNativeModule","config","key","nativeEvents","nativeModuleName","hasMultiAppSupport","hasCustomUrlOrRegionSupport","disablePrependCustomUrlOrRegion","multiModuleRoot","multiModule","Array","isArray","nativeModuleNames","nativeModule","getMissingModuleHelpText","push","assign","subscribeToNativeModuleEvent","freeze","eventName","addListener","event","appName","databaseId","emit","snippet","getNativeModule","getAppModule"],"sources":["C:/Users/ACER/Documents/Capstone/node_modules/@react-native-firebase/app/lib/internal/registry/nativeModule.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { APP_NATIVE_MODULE } from '../constants';\nimport NativeFirebaseError from '../NativeFirebaseError';\nimport RNFBNativeEventEmitter from '../RNFBNativeEventEmitter';\nimport SharedEventEmitter from '../SharedEventEmitter';\nimport { getReactNativeModule } from '../nativeModule';\nimport { isAndroid, isIOS } from '../../common';\n\nconst NATIVE_MODULE_REGISTRY = {};\nconst NATIVE_MODULE_EVENT_SUBSCRIPTIONS = {};\n\nfunction nativeModuleKey(module) {\n  return `${module._customUrlOrRegion || ''}:${module.app.name}:${module._config.namespace}`;\n}\n\n/**\n * Wraps a native module method to provide\n * auto prepended args and custom Error classes.\n *\n * @param namespace\n * @param method\n * @param argToPrepend\n * @returns {Function}\n */\nfunction nativeModuleMethodWrapped(namespace, method, argToPrepend) {\n  return (...args) => {\n    const possiblePromise = method(...[...argToPrepend, ...args]);\n\n    if (possiblePromise && possiblePromise.then) {\n      const jsStack = new Error().stack;\n      return possiblePromise.catch(nativeError =>\n        Promise.reject(new NativeFirebaseError(nativeError, jsStack, namespace)),\n      );\n    }\n\n    return possiblePromise;\n  };\n}\n\n/**\n * Prepends all arguments in prependArgs to all native method calls\n *\n * @param namespace\n * @param NativeModule\n * @param argToPrepend\n */\nfunction nativeModuleWrapped(namespace, NativeModule, argToPrepend) {\n  const native = {};\n  if (!NativeModule) {\n    return NativeModule;\n  }\n\n  let properties = Object.keys(Object.getPrototypeOf(NativeModule));\n  if (!properties.length) properties = Object.keys(NativeModule);\n\n  for (let i = 0, len = properties.length; i < len; i++) {\n    const property = properties[i];\n    if (typeof NativeModule[property] === 'function') {\n      native[property] = nativeModuleMethodWrapped(namespace, NativeModule[property], argToPrepend);\n    } else {\n      native[property] = NativeModule[property];\n    }\n  }\n\n  return native;\n}\n\n/**\n * Initialises and wraps all the native module methods.\n *\n * @param module\n * @returns {*}\n */\nfunction initialiseNativeModule(module) {\n  const config = module._config;\n  const key = nativeModuleKey(module);\n  const {\n    namespace,\n    nativeEvents,\n    nativeModuleName,\n    hasMultiAppSupport,\n    hasCustomUrlOrRegionSupport,\n    disablePrependCustomUrlOrRegion,\n  } = config;\n  const multiModuleRoot = {};\n  const multiModule = Array.isArray(nativeModuleName);\n  const nativeModuleNames = multiModule ? nativeModuleName : [nativeModuleName];\n\n  for (let i = 0; i < nativeModuleNames.length; i++) {\n    const nativeModule = getReactNativeModule(nativeModuleNames[i]);\n\n    // only error if there's a single native module\n    // as multi modules can mean some are optional\n    if (!multiModule && !nativeModule) {\n      throw new Error(getMissingModuleHelpText(namespace));\n    }\n\n    if (multiModule) {\n      multiModuleRoot[nativeModuleNames[i]] = !!nativeModule;\n    }\n\n    const argToPrepend = [];\n\n    if (hasMultiAppSupport) {\n      argToPrepend.push(module.app.name);\n    }\n\n    if (hasCustomUrlOrRegionSupport && !disablePrependCustomUrlOrRegion) {\n      argToPrepend.push(module._customUrlOrRegion);\n    }\n\n    Object.assign(multiModuleRoot, nativeModuleWrapped(namespace, nativeModule, argToPrepend));\n  }\n\n  if (nativeEvents && nativeEvents.length) {\n    for (let i = 0, len = nativeEvents.length; i < len; i++) {\n      subscribeToNativeModuleEvent(nativeEvents[i]);\n    }\n  }\n\n  Object.freeze(multiModuleRoot);\n\n  NATIVE_MODULE_REGISTRY[key] = multiModuleRoot;\n\n  return NATIVE_MODULE_REGISTRY[key];\n}\n\n/**\n * Subscribe to a native event for js side distribution by appName\n *    React Native events are hard set at compile - cant do dynamic event names\n *    so we use a single event send it to js and js then internally can prefix it\n *    and distribute dynamically.\n *\n * @param eventName\n * @private\n */\nfunction subscribeToNativeModuleEvent(eventName) {\n  if (!NATIVE_MODULE_EVENT_SUBSCRIPTIONS[eventName]) {\n    RNFBNativeEventEmitter.addListener(eventName, event => {\n      if (event.appName && event.databaseId) {\n        // Firestore requires both appName and databaseId to prefix\n        SharedEventEmitter.emit(`${event.appName}-${event.databaseId}-${eventName}`, event);\n      } else if (event.appName) {\n        // native event has an appName property - auto prefix and internally emit\n        SharedEventEmitter.emit(`${event.appName}-${eventName}`, event);\n      } else {\n        // standard event - no need to prefix\n        SharedEventEmitter.emit(eventName, event);\n      }\n    });\n\n    NATIVE_MODULE_EVENT_SUBSCRIPTIONS[eventName] = true;\n  }\n}\n\n/**\n * Help text for integrating the native counter parts for each firebase module.\n *\n * @param namespace\n * @returns {string}\n */\nfunction getMissingModuleHelpText(namespace) {\n  const snippet = `firebase.${namespace}()`;\n\n  if (isIOS || isAndroid) {\n    return (\n      `You attempted to use a Firebase module that's not installed natively on your project by calling ${snippet}.` +\n      `\\r\\n\\r\\nEnsure you have installed the npm package '@react-native-firebase/${namespace}',` +\n      ' have imported it in your project, and have rebuilt your native application.'\n    );\n  }\n\n  return (\n    `You attempted to use a Firebase module that's not installed on your project by calling ${snippet}.` +\n    `\\r\\n\\r\\nEnsure you have installed the npm package '@react-native-firebase/${namespace}' and` +\n    ' have imported it in your project.'\n  );\n}\n\n/**\n * Gets a wrapped native module instance for the provided firebase module.\n * Will attempt to create a new instance if non previously created.\n *\n * @param module\n * @returns {*}\n */\nexport function getNativeModule(module) {\n  const key = nativeModuleKey(module);\n\n  if (NATIVE_MODULE_REGISTRY[key]) {\n    return NATIVE_MODULE_REGISTRY[key];\n  }\n\n  return initialiseNativeModule(module);\n}\n\n/**\n * Custom wrapped app module as it does not have it's own FirebaseModule based class.\n *\n * @returns {*}\n */\nexport function getAppModule() {\n  if (NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE]) {\n    return NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE];\n  }\n\n  const namespace = 'app';\n  const nativeModule = getReactNativeModule(APP_NATIVE_MODULE);\n\n  if (!nativeModule) {\n    throw new Error(getMissingModuleHelpText(namespace));\n  }\n\n  NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE] = nativeModuleWrapped(namespace, nativeModule, []);\n\n  return NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE];\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}