{"ast":null,"code":"export default class OAuthProvider {\n  #providerId = null;\n  #customParameters = {};\n  #scopes = [];\n  constructor(providerId) {\n    this.#providerId = providerId;\n  }\n  static credential(idToken, accessToken) {\n    return {\n      token: idToken,\n      secret: accessToken,\n      providerId: 'oauth'\n    };\n  }\n  get PROVIDER_ID() {\n    return this.#providerId;\n  }\n  setCustomParameters(customOAuthParameters) {\n    this.#customParameters = customOAuthParameters;\n    return this;\n  }\n  getCustomParameters() {\n    return this.#customParameters;\n  }\n  addScope(scope) {\n    if (!this.#scopes.includes(scope)) {\n      this.#scopes.push(scope);\n    }\n    return this;\n  }\n  getScopes() {\n    return [...this.#scopes];\n  }\n  toObject() {\n    return {\n      providerId: this.#providerId,\n      scopes: this.#scopes,\n      customParameters: this.#customParameters\n    };\n  }\n}","map":{"version":3,"names":["OAuthProvider","providerId","customParameters","scopes","constructor","credential","idToken","accessToken","token","secret","PROVIDER_ID","setCustomParameters","customOAuthParameters","getCustomParameters","addScope","scope","includes","push","getScopes","toObject"],"sources":["C:/Users/ACER/Documents/Capstone/node_modules/@react-native-firebase/auth/lib/providers/OAuthProvider.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport default class OAuthProvider {\n  /** @internal */\n  #providerId = null;\n  /** @internal */\n  #customParameters = {};\n  /** @internal */\n  #scopes = [];\n\n  constructor(providerId) {\n    this.#providerId = providerId;\n  }\n\n  static credential(idToken, accessToken) {\n    return {\n      token: idToken,\n      secret: accessToken,\n      providerId: 'oauth',\n    };\n  }\n\n  get PROVIDER_ID() {\n    return this.#providerId;\n  }\n\n  setCustomParameters(customOAuthParameters) {\n    this.#customParameters = customOAuthParameters;\n    return this;\n  }\n\n  getCustomParameters() {\n    return this.#customParameters;\n  }\n\n  addScope(scope) {\n    if (!this.#scopes.includes(scope)) {\n      this.#scopes.push(scope);\n    }\n    return this;\n  }\n\n  getScopes() {\n    return [...this.#scopes];\n  }\n\n  /** @internal */\n  toObject() {\n    return {\n      providerId: this.#providerId,\n      scopes: this.#scopes,\n      customParameters: this.#customParameters,\n    };\n  }\n}\n"],"mappings":"AAiBA,eAAe,MAAMA,aAAa,CAAC;EAEjC,CAACC,UAAU,GAAG,IAAI;EAElB,CAACC,gBAAgB,GAAG,CAAC,CAAC;EAEtB,CAACC,MAAM,GAAG,EAAE;EAEZC,WAAWA,CAACH,UAAU,EAAE;IACtB,IAAI,CAAC,CAACA,UAAU,GAAGA,UAAU;EAC/B;EAEA,OAAOI,UAAUA,CAACC,OAAO,EAAEC,WAAW,EAAE;IACtC,OAAO;MACLC,KAAK,EAAEF,OAAO;MACdG,MAAM,EAAEF,WAAW;MACnBN,UAAU,EAAE;IACd,CAAC;EACH;EAEA,IAAIS,WAAWA,CAAA,EAAG;IAChB,OAAO,IAAI,CAAC,CAACT,UAAU;EACzB;EAEAU,mBAAmBA,CAACC,qBAAqB,EAAE;IACzC,IAAI,CAAC,CAACV,gBAAgB,GAAGU,qBAAqB;IAC9C,OAAO,IAAI;EACb;EAEAC,mBAAmBA,CAAA,EAAG;IACpB,OAAO,IAAI,CAAC,CAACX,gBAAgB;EAC/B;EAEAY,QAAQA,CAACC,KAAK,EAAE;IACd,IAAI,CAAC,IAAI,CAAC,CAACZ,MAAM,CAACa,QAAQ,CAACD,KAAK,CAAC,EAAE;MACjC,IAAI,CAAC,CAACZ,MAAM,CAACc,IAAI,CAACF,KAAK,CAAC;IAC1B;IACA,OAAO,IAAI;EACb;EAEAG,SAASA,CAAA,EAAG;IACV,OAAO,CAAC,GAAG,IAAI,CAAC,CAACf,MAAM,CAAC;EAC1B;EAGAgB,QAAQA,CAAA,EAAG;IACT,OAAO;MACLlB,UAAU,EAAE,IAAI,CAAC,CAACA,UAAU;MAC5BE,MAAM,EAAE,IAAI,CAAC,CAACA,MAAM;MACpBD,gBAAgB,EAAE,IAAI,CAAC,CAACA;IAC1B,CAAC;EACH;AACF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}